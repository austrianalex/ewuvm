Terminals unused in grammar

   ENDP
   STOP
   LPREC
   RPREC


Grammar

    0 $accept: programA $end

    1 programA: program

    2 program: program0
    3        | varlistend program0
    4        | program program0

    5 varlistend: dotdata varlists

    6 dotdata: DOT DATA

    7 varlists: varlists varlist
    8         | varlist

    9 varlist: term
   10        | term COMMA term

   11 program0: program1
   12         | program1 initdata

   13 initdata: dotidata labels
   14         | dotidata

   15 dotidata: DOT IDATA

   16 labels: labels labl collabeldata
   17       | labl collabeldata

   18 labl: term

   19 collabeldata: COLON term

   20 program1: process0 code0 END

   21 process0: PROCESS term

   22 code0: code0 code
   23      | code

   24 code: LOAD term
   25     | LOADI term
   26     | LA term
   27     | OPEN
   28     | READ
   29     | WRITE
   30     | CLOSE
   31     | SEEK
   32     | POPD term
   33     | POP
   34     | JFALSE term
   35     | JMP term
   36     | LOCK
   37     | UNLOCK
   38     | LD
   39     | ST
   40     | STOR term
   41     | DIV
   42     | MUL
   43     | NOT
   44     | NE_OP
   45     | EQ_OP
   46     | GT_OP
   47     | GE_OP
   48     | LT_OP
   49     | LE_OP
   50     | ADD
   51     | SUB
   52     | AND
   53     | OR
   54     | HALT
   55     | term COLON

   56 term: ID
   57     | NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 57
ID (259) 56
LD (260) 38
LA (261) 26
LOAD (262) 24
LOADI (263) 25
ADD (264) 50
SUB (265) 51
MUL (266) 42
DIV (267) 41
END (268) 20
ENDP (269)
PROCESS (270) 21
AND (271) 52
OR (272) 53
NOT (273) 43
LE_OP (274) 49
GE_OP (275) 47
LT_OP (276) 48
GT_OP (277) 46
EQ_OP (278) 45
NE_OP (279) 44
STOP (280)
STOR (281) 40
ST (282) 39
DATA (283) 6
IDATA (284) 15
COMMA (285) 10
COLON (286) 19 55
LOCK (287) 36
UNLOCK (288) 37
OPEN (289) 27
READ (290) 28
WRITE (291) 29
CLOSE (292) 30
SEEK (293) 31
POPD (294) 32
POP (295) 33
DOT (296) 6 15
HALT (297) 54
JFALSE (298) 34
JMP (299) 35
LPREC (300)
RPREC (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
programA (48)
    on left: 1, on right: 0
program (49)
    on left: 2 3 4, on right: 1 4
varlistend (50)
    on left: 5, on right: 3
dotdata (51)
    on left: 6, on right: 5
varlists (52)
    on left: 7 8, on right: 5 7
varlist (53)
    on left: 9 10, on right: 7 8
program0 (54)
    on left: 11 12, on right: 2 3 4
initdata (55)
    on left: 13 14, on right: 12
dotidata (56)
    on left: 15, on right: 13 14
labels (57)
    on left: 16 17, on right: 13 16
labl (58)
    on left: 18, on right: 16 17
collabeldata (59)
    on left: 19, on right: 16 17
program1 (60)
    on left: 20, on right: 11 12
process0 (61)
    on left: 21, on right: 20
code0 (62)
    on left: 22 23, on right: 20 22
code (63)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42 43 44 45 46 47 48 49 50 51 52 53 54 55, on right: 22 23
term (64)
    on left: 56 57, on right: 9 10 18 19 21 24 25 26 32 34 35 40 55


state 0

    0 $accept: . programA $end

    PROCESS  shift, and go to state 1
    DOT      shift, and go to state 2

    programA    go to state 3
    program     go to state 4
    varlistend  go to state 5
    dotdata     go to state 6
    program0    go to state 7
    program1    go to state 8
    process0    go to state 9


state 1

   21 process0: PROCESS . term

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    term  go to state 12


state 2

    6 dotdata: DOT . DATA

    DATA  shift, and go to state 13


state 3

    0 $accept: programA . $end

    $end  shift, and go to state 14


state 4

    1 programA: program .
    4 program: program . program0

    PROCESS  shift, and go to state 1

    $default  reduce using rule 1 (programA)

    program0  go to state 15
    program1  go to state 8
    process0  go to state 9


state 5

    3 program: varlistend . program0

    PROCESS  shift, and go to state 1

    program0  go to state 16
    program1  go to state 8
    process0  go to state 9


state 6

    5 varlistend: dotdata . varlists

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    varlists  go to state 17
    varlist   go to state 18
    term      go to state 19


state 7

    2 program: program0 .

    $default  reduce using rule 2 (program)


state 8

   11 program0: program1 .
   12         | program1 . initdata

    DOT  shift, and go to state 20

    $default  reduce using rule 11 (program0)

    initdata  go to state 21
    dotidata  go to state 22


state 9

   20 program1: process0 . code0 END

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11
    LD      shift, and go to state 23
    LA      shift, and go to state 24
    LOAD    shift, and go to state 25
    LOADI   shift, and go to state 26
    ADD     shift, and go to state 27
    SUB     shift, and go to state 28
    MUL     shift, and go to state 29
    DIV     shift, and go to state 30
    AND     shift, and go to state 31
    OR      shift, and go to state 32
    NOT     shift, and go to state 33
    LE_OP   shift, and go to state 34
    GE_OP   shift, and go to state 35
    LT_OP   shift, and go to state 36
    GT_OP   shift, and go to state 37
    EQ_OP   shift, and go to state 38
    NE_OP   shift, and go to state 39
    STOR    shift, and go to state 40
    ST      shift, and go to state 41
    LOCK    shift, and go to state 42
    UNLOCK  shift, and go to state 43
    OPEN    shift, and go to state 44
    READ    shift, and go to state 45
    WRITE   shift, and go to state 46
    CLOSE   shift, and go to state 47
    SEEK    shift, and go to state 48
    POPD    shift, and go to state 49
    POP     shift, and go to state 50
    HALT    shift, and go to state 51
    JFALSE  shift, and go to state 52
    JMP     shift, and go to state 53

    code0  go to state 54
    code   go to state 55
    term   go to state 56


state 10

   57 term: NUMBER .

    $default  reduce using rule 57 (term)


state 11

   56 term: ID .

    $default  reduce using rule 56 (term)


state 12

   21 process0: PROCESS term .

    $default  reduce using rule 21 (process0)


state 13

    6 dotdata: DOT DATA .

    $default  reduce using rule 6 (dotdata)


state 14

    0 $accept: programA $end .

    $default  accept


state 15

    4 program: program program0 .

    $default  reduce using rule 4 (program)


state 16

    3 program: varlistend program0 .

    $default  reduce using rule 3 (program)


state 17

    5 varlistend: dotdata varlists .
    7 varlists: varlists . varlist

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    $default  reduce using rule 5 (varlistend)

    varlist  go to state 57
    term     go to state 19


state 18

    8 varlists: varlist .

    $default  reduce using rule 8 (varlists)


state 19

    9 varlist: term .
   10        | term . COMMA term

    COMMA  shift, and go to state 58

    $default  reduce using rule 9 (varlist)


state 20

   15 dotidata: DOT . IDATA

    IDATA  shift, and go to state 59


state 21

   12 program0: program1 initdata .

    $default  reduce using rule 12 (program0)


state 22

   13 initdata: dotidata . labels
   14         | dotidata .

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    $default  reduce using rule 14 (initdata)

    labels  go to state 60
    labl    go to state 61
    term    go to state 62


state 23

   38 code: LD .

    $default  reduce using rule 38 (code)


state 24

   26 code: LA . term

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    term  go to state 63


state 25

   24 code: LOAD . term

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    term  go to state 64


state 26

   25 code: LOADI . term

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    term  go to state 65


state 27

   50 code: ADD .

    $default  reduce using rule 50 (code)


state 28

   51 code: SUB .

    $default  reduce using rule 51 (code)


state 29

   42 code: MUL .

    $default  reduce using rule 42 (code)


state 30

   41 code: DIV .

    $default  reduce using rule 41 (code)


state 31

   52 code: AND .

    $default  reduce using rule 52 (code)


state 32

   53 code: OR .

    $default  reduce using rule 53 (code)


state 33

   43 code: NOT .

    $default  reduce using rule 43 (code)


state 34

   49 code: LE_OP .

    $default  reduce using rule 49 (code)


state 35

   47 code: GE_OP .

    $default  reduce using rule 47 (code)


state 36

   48 code: LT_OP .

    $default  reduce using rule 48 (code)


state 37

   46 code: GT_OP .

    $default  reduce using rule 46 (code)


state 38

   45 code: EQ_OP .

    $default  reduce using rule 45 (code)


state 39

   44 code: NE_OP .

    $default  reduce using rule 44 (code)


state 40

   40 code: STOR . term

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    term  go to state 66


state 41

   39 code: ST .

    $default  reduce using rule 39 (code)


state 42

   36 code: LOCK .

    $default  reduce using rule 36 (code)


state 43

   37 code: UNLOCK .

    $default  reduce using rule 37 (code)


state 44

   27 code: OPEN .

    $default  reduce using rule 27 (code)


state 45

   28 code: READ .

    $default  reduce using rule 28 (code)


state 46

   29 code: WRITE .

    $default  reduce using rule 29 (code)


state 47

   30 code: CLOSE .

    $default  reduce using rule 30 (code)


state 48

   31 code: SEEK .

    $default  reduce using rule 31 (code)


state 49

   32 code: POPD . term

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    term  go to state 67


state 50

   33 code: POP .

    $default  reduce using rule 33 (code)


state 51

   54 code: HALT .

    $default  reduce using rule 54 (code)


state 52

   34 code: JFALSE . term

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    term  go to state 68


state 53

   35 code: JMP . term

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    term  go to state 69


state 54

   20 program1: process0 code0 . END
   22 code0: code0 . code

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11
    LD      shift, and go to state 23
    LA      shift, and go to state 24
    LOAD    shift, and go to state 25
    LOADI   shift, and go to state 26
    ADD     shift, and go to state 27
    SUB     shift, and go to state 28
    MUL     shift, and go to state 29
    DIV     shift, and go to state 30
    END     shift, and go to state 70
    AND     shift, and go to state 31
    OR      shift, and go to state 32
    NOT     shift, and go to state 33
    LE_OP   shift, and go to state 34
    GE_OP   shift, and go to state 35
    LT_OP   shift, and go to state 36
    GT_OP   shift, and go to state 37
    EQ_OP   shift, and go to state 38
    NE_OP   shift, and go to state 39
    STOR    shift, and go to state 40
    ST      shift, and go to state 41
    LOCK    shift, and go to state 42
    UNLOCK  shift, and go to state 43
    OPEN    shift, and go to state 44
    READ    shift, and go to state 45
    WRITE   shift, and go to state 46
    CLOSE   shift, and go to state 47
    SEEK    shift, and go to state 48
    POPD    shift, and go to state 49
    POP     shift, and go to state 50
    HALT    shift, and go to state 51
    JFALSE  shift, and go to state 52
    JMP     shift, and go to state 53

    code  go to state 71
    term  go to state 56


state 55

   23 code0: code .

    $default  reduce using rule 23 (code0)


state 56

   55 code: term . COLON

    COLON  shift, and go to state 72


state 57

    7 varlists: varlists varlist .

    $default  reduce using rule 7 (varlists)


state 58

   10 varlist: term COMMA . term

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    term  go to state 73


state 59

   15 dotidata: DOT IDATA .

    $default  reduce using rule 15 (dotidata)


state 60

   13 initdata: dotidata labels .
   16 labels: labels . labl collabeldata

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    $default  reduce using rule 13 (initdata)

    labl  go to state 74
    term  go to state 62


state 61

   17 labels: labl . collabeldata

    COLON  shift, and go to state 75

    collabeldata  go to state 76


state 62

   18 labl: term .

    $default  reduce using rule 18 (labl)


state 63

   26 code: LA term .

    $default  reduce using rule 26 (code)


state 64

   24 code: LOAD term .

    $default  reduce using rule 24 (code)


state 65

   25 code: LOADI term .

    $default  reduce using rule 25 (code)


state 66

   40 code: STOR term .

    $default  reduce using rule 40 (code)


state 67

   32 code: POPD term .

    $default  reduce using rule 32 (code)


state 68

   34 code: JFALSE term .

    $default  reduce using rule 34 (code)


state 69

   35 code: JMP term .

    $default  reduce using rule 35 (code)


state 70

   20 program1: process0 code0 END .

    $default  reduce using rule 20 (program1)


state 71

   22 code0: code0 code .

    $default  reduce using rule 22 (code0)


state 72

   55 code: term COLON .

    $default  reduce using rule 55 (code)


state 73

   10 varlist: term COMMA term .

    $default  reduce using rule 10 (varlist)


state 74

   16 labels: labels labl . collabeldata

    COLON  shift, and go to state 75

    collabeldata  go to state 77


state 75

   19 collabeldata: COLON . term

    NUMBER  shift, and go to state 10
    ID      shift, and go to state 11

    term  go to state 78


state 76

   17 labels: labl collabeldata .

    $default  reduce using rule 17 (labels)


state 77

   16 labels: labels labl collabeldata .

    $default  reduce using rule 16 (labels)


state 78

   19 collabeldata: COLON term .

    $default  reduce using rule 19 (collabeldata)
